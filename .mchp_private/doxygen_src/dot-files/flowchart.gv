digraph power_control_flowchart
{ 
    compound=true;
    newrank=true;
    center =true;

    node [fontname = "Consolas, 'Courier New', Courier, Sans-Serif"];
    node [fontsize = 10];
    node [shape = box]; call_PWR_SM; Init; Run;
    node [shape = box]; FB_data; fault_test; exec_State_Machine; current_cal; current_bal; reg_test; exit; PWR_suspend; PWR_resume;
    node [shape = box]; enabled; State_machine; exit1; Buck_suspend; Buck_resume; 
    node [shape = box]; NPNZ_control; Suspend_PWM; Resume_PWM; PWM; ADC; cNPNZ;
    node [shape = record]; Success; Fault_detected;
    node [shape = diamond]; Reset;  
       
    Reset [label="Reset"];
    Success [label="{Main Function |{<f0> NO|<f1> Successful?|<f2> YES}}"];
       
    subgraph cluster_loop
    {
        label="main() loop";
        call_PWR_SM [label="Call PWR State Machine" URL="@ref appPowerSupply_Execute"];
        Fault_detected [label="{Call Fault Handler |{<f0> NO|<f1> Fault Detected?|<f2> YES}}" URL="@ref appFaultMonitor_Execute"]; 
    }
  
    subgraph cluster0 {

        subgraph cluster00
        {
            label="Power Supply State Machine";
            FB_data [label="Publish FeedBack Data" URL="@ref appPowerSupply_Execute"]; 
            fault_test [label="Fault Test"]; 
            exec_State_Machine [label="Execute State Machine" URL="@ref drv_BuckConverter_Execute"]; 
            Init [label="Init"];
            Run [label="Run"]
            current_cal [label="Current Calibration" URL="@ref appPowerSupply_CurrentSenseCalibration"]; 
            current_bal[label="Current Balancing" URL="@ref appPowerSupply_CurrentBalancing"];
            reg_test [label="Regulation Test ON/OFF"]; 
            exit[label="Exit"]; 
        }

        PWR_suspend [label="PWR Suspend"]; 
        PWR_resume [label="PWM Resume"];
        label="My Application Layer";
    }

    subgraph cluster1 
    {
        subgraph cluster10 
        {
            label="Buck Converter State Machine";
            enabled [label="Enabled?"]; 
            State_machine [label="State Machine" URL="@ref buck_state_machine"]; 
            exit1 [label="Exit"]; 
        }
        
        subgraph cluster11 
        {
            label="Buck Controller Control";
            Buck_suspend [label="Buck Suspend"]; 
            Buck_resume [label="Buck Resume"];
        }    
        
        label="Device Layer";
    }

    subgraph cluster2 
    {
        NPNZ_control [label="Independent NPNZ Real Time \nControl Driver/Library \n \nCycle-by-cycle PWM interrupt" URL="@ref npnz16b.h"];
        subgraph cluster20{
            Suspend_PWM [label="Suspend PWM"]; 
            Resume_PWM [label="Resume PWM"]; 
        }
        label="my Driver Layer";
    }
  
    PWM [label="PWM"];
    ADC [label="ADC"];
    cNPNZ [label="cNPNZ16b_t"];
  
    Reset -> Success;
    "Success":f0 -> Reset;
    "Success":f2 -> call_PWR_SM [ltail=yes1 lhead=main_loop];
    call_PWR_SM -> Fault_detected;
    "Fault_detected":f2 -> PWR_suspend -> Buck_suspend -> Suspend_PWM;
    "Fault_detected":f0 -> call_PWR_SM [lhead=main_loop];
  
    call_PWR_SM -> FB_data [ltail=call_PWR_SM lhead=cluster00];
    FB_data -> fault_test -> exec_State_Machine -> Init -> current_cal -> exit;
    exec_State_Machine -> Run -> current_bal -> reg_test -> exit;
    exec_State_Machine -> State_machine [ltail=exec_State_Machine lhead=cluster10];
    exit -> call_PWR_SM;
    Buck_suspend -> State_machine;
    Buck_resume -> State_machine;
    "Fault_detected":f0 -> PWR_resume;
    PWR_resume -> enabled [ltail=PWR_resume lhead=cluster10];
    Buck_resume -> Resume_PWM;
    enabled -> State_machine -> exit1;
       
    PWM <-> NPNZ_control;
    ADC <-> NPNZ_control;
    cNPNZ <-> NPNZ_control;
  		
    exit -> PWR_suspend -> PWR_resume [style=invis];	
    Fault_detected -> current_cal [style=invis];
    call_PWR_SM -> FB_data ->State_machine [style=invis];
    exit -> exit1 [style=invis];
    call_PWR_SM -> fault_test -> State_machine -> NPNZ_control [style=invis];
    cNPNZ -> ADC -> PWM [style=invis];		
 
    ranksep=0.3;
    {rank=same; FB_data; enabled; NPNZ_control; cNPNZ;}
    {rank=same; fault_test;ADC;}
    {rank=same; exec_State_Machine; State_machine;PWM;}
    {rank=same; exit;exit1;}
    {rank=same;PWR_suspend;Buck_suspend; Suspend_PWM;}
    {rank=sink; PWR_resume; Buck_resume; Resume_PWM;} 
 
}

digraph Firmware
{ 
    node [fontname = "Consolas, 'Courier New', Courier, Sans-Serif"];
    node [fontsize = 10];
    node [shape = box]; State_Initialize; State_Reset; State_Standby; State_RampUp; State_Online;State_Error;    
    node [shape = box]; call_PCSM; call_FH; 
    node [shape = box]; system_init; appPS_Init; appFM_init; enable_TMR; config_procedure_check;
    node [shape = box]; yes1;yes2;no1;no2;
    node [shape = oval]; Fault_Handler; Power_Control_SM;
    node [shape = diamond]; Success; Reset; timer_expired;
 
    graph [rankdir="TB"] 
    {
        Reset [label="Reset"];

        subgraph cluster0 
        {      
            system_init [label="System Initialize" URL="@ref SYSTEM_Initialize"]; 
            appPS_Init [label="Initialize buck converter object \nand state machine " URL="@ref appPowerSupply_Initialize"];
            appFM_init [label="Initialize fault object \nand fault handler task" URL="@ref appFaultMonitor_Initialize"];
            enable_TMR [label="Enable main Timer"];
            config_procedure_check [label="Configuration procedure check"];
            Success [label="Successful?"]
            yes1 [label = "YES"];
            no1 [label = "NO"];
            label="Device Start-Up";
            fontname="Helvetica, Arial, Sans-Serif";
            fontsize=12;
        }

        subgraph cluster1 
        {    
            timer_expired [label="100usec Timer expired?"];
            yes2 [label = "YES"];
            no2 [label = "NO"]; 
            call_PCSM [label="Call Power Control State Machine" URL="@ref appPowerSupply_Execute"];
            call_FH [label="call Fault Handler" URL="@ref appFaultMonitor_Execute"];
            label="Main Loop";
            fontname="Helvetica, Arial, Sans-Serif";
            fontsize=12;
        }

        subgraph cluster2 
        {    
            Power_Control_SM [label="Power Control State Machine" URL="@ref buck_state_machine"];
            State_Initialize [label="State Initialize" URL="@ref State_Initialize"];
            State_Reset [label="State Reset" URL="@ref State_Reset"];
            State_Standby [label="State Standby" URL="@ref State_Standby"]; 
            State_RampUp [label="State Ramp Up" URL="@ref State_RampUp"]; 
            State_Online [label="State Online" URL="@ref State_Online"];
            State_Error [label="State Error" URL="@ref State_Error"];
            Fault_Handler [label="Fault Handler"];
            label="Task Layer";
            fontname="Helvetica, Arial, Sans-Serif";
            fontsize=12;
        }

		Reset -> system_init -> appPS_Init -> appFM_init -> enable_TMR -> config_procedure_check -> Success -> no1 -> Reset;
		Success -> yes1 -> timer_expired -> no2 -> timer_expired;
		timer_expired -> yes2 -> call_PCSM -> call_FH -> timer_expired;
		call_PCSM -> Power_Control_SM -> State_Initialize->State_Reset->State_Standby->State_RampUp->State_Online;
		State_Error -> State_Reset;
		call_FH -> Fault_Handler -> State_Error;

    }

}
