//First layer
/**
 @defgroup firmware-flow Firmware Architecture
 @brief Firmware Flowchart 
 @details
  The firmware is divided into three major section:
  - Configuration
  - Task Management
  - Task Execution
*/

//Firmware Flowchart index
/**
 @defgroup device-start-up Device Start Up
 @dotfile dev-startup.gv
 @ingroup firmware-flow
 @brief Device Start Up

 @defgroup main-loop Main Loop
 @ingroup firmware-flow
 @brief Main Loop 
 
 @defgroup main-loop-low-priority Low-Priority Task Execution
 @ingroup main-loop
 @brief Low priority task execution

 @defgroup main-loop-high-priority High-Priority Task Execution
 @ingroup main-loop
 @brief High priority task execution

 @defgroup task-layer Task Layer
 @ingroup firmware-flow
 @brief Task Layer

*/

//Device Start-Up Sub-Index
/**
 @defgroup system-initialization-mcu Essential Chip Resources
 @ingroup device-start-up
 @brief 
 @details
 
 @defgroup clock-initialization Main Oscillator Initialization
 @ingroup system-initialization-mcu
 @brief 
 @details
 
 @defgroup gpio-initialization Device Pin Configuration
 @ingroup system-initialization-mcu
 @brief 
 @details

 @defgroup system-initialization-user-peripherals Hardware-Specific Chip Resources
 @ingroup device-start-up
 @brief 
 @details
 
 @defgroup dac-initialization Digital-to-Analog Converter
 @ingroup system-initialization-user-peripherals
 @brief 
 @details
 
 @defgroup op-amp-initialization Operational Amplifier Configuration
 @ingroup system-initialization-user-peripherals
 @brief 
 @details

 @defgroup system-initialization-user-tasks Firmware Task Initialization
 @ingroup device-start-up
 @brief 
 @details
 
 @defgroup os-timer-initialization Operating System Time Base
 @ingroup system-initialization-user-tasks
 @brief 
 @details
 
*/

// Hardware Abstraction Layer Title
/**
 @defgroup abstraction-layer Hardware Abstraction Layer
 @brief Hardware Abstraction Layer Declarations
 @details
  The hardware abstraction layer introduces global defines which can be used in the firmware section of the source code to reference hardware dependent parameters and device peripheral instances and features.
  This abstraction is essential to adapt to hardware changes including migration across microcontroller device families and hardware versions with minimum risk and time efforts.
  As the microcontroller used in this design is a fixed, irreplaceable board component, this particular Hardware Abstraction Layer (HAL) covers declarations of circuit control and feedback signals as well as
  associated microcontroller peripheral instances and features.
*/


// Library Layer
/**
 @defgroup lib-layer Library Layer 
 @brief
 @details
*/ 